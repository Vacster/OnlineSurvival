<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fireButton</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>device_mouse_dbclick_enable(true);
draw = false;
length = 1920;
randi = random_range(-40,40);
virtual_key_add(x, y, sprite_width, sprite_height, vk_space);
canshoot = true;
change = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw = false;
randi = random_range(-30,30);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check(vk_space) &amp;&amp; canshoot == true){
t = 0;
mx = obj_network.me.x;
my = obj_network.me.y;
directing = obj_network.direct;
for(t = 0; t &lt; length; t+=10){
    collision = collision_line(obj_network.me.x, obj_network.me.y, obj_network.me.x+lengthdir_x(t, directing), obj_network.me.y+lengthdir_y(t, directing), obj_zombie, false, true);
        if(instance_exists(collision)){
            collision.health -= 1;
            obj_zombie.penis = collision;
            break;
        }
    }
draw = true;
if(obj_network.me.weapon == PISTOL){
    canshoot = false;
}
    alarm[0] = 0.05 * room_speed;

var buffer = buffer_create(1024, buffer_fixed, 1);

buffer_seek(buffer, buffer_seek_start, 0);
buffer_write(buffer, buffer_u8, SHOOT);
buffer_write(buffer, buffer_u16, t);
buffer_write(buffer, buffer_u16, directing);
buffer_write(buffer, buffer_u16, draw);
if(obj_network.is_server){
    network_send_packet(obj_network.client, buffer, buffer_tell(buffer));
}else{
    network_send_packet(obj_network.socket, buffer, buffer_tell(buffer));
}
buffer_delete(buffer);
}else if(!keyboard_check(vk_space)){
    canshoot = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d = obj_network.direct;
draw_set_alpha(1);
draw_sprite(spr_fireButton, 0, x, y);
if(draw == true){
    draw_set_alpha(0.5);
    if(obj_network.me.weapon == PISTOL){
        if(d == 0 || d == 180){
            draw_line_width_colour(mx,my,mx+lengthdir_x(t, obj_network.direct), my+lengthdir_y(t, obj_network.direct)+randi, 5, c_ltgray, c_white);
        }else if(d == 90 || d == 270){
            draw_line_width_colour(mx,my,mx+lengthdir_x(t, obj_network.direct)+randi, my+lengthdir_y(t, obj_network.direct), 5, c_ltgray, c_white);
        }else{
            draw_line_width_colour(mx,my,mx+lengthdir_x(t, obj_network.direct)+randi, my+lengthdir_y(t, obj_network.direct)+random_range(-30,30), 5, c_ltgray, c_white);
        }
    }else if(obj_network.me.weapon == UZI){
        randi = random_range(-30,30);
        if(d == 0 || d == 180){
            draw_line_width_colour(mx,my,mx+lengthdir_x(t, obj_network.direct), my+lengthdir_y(t, obj_network.direct)+randi, 5, c_ltgray, c_white);
        }else if(d == 90 || d == 270){
            draw_line_width_colour(mx,my,mx+lengthdir_x(t, obj_network.direct)+randi, my+lengthdir_y(t, obj_network.direct), 5, c_ltgray, c_white);
        }else{
            draw_line_width_colour(mx,my,mx+lengthdir_x(t, obj_network.direct)+randi, my+lengthdir_y(t, obj_network.direct)+random_range(-30,30), 5, c_ltgray, c_white);
        }
      
    }
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
